{"version":3,"sources":["Main.js","Favorites.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","getAutoComplete","q","key","a","url","fetch","response","json","body","getDaily","cityKey","apikey","Main","props","API_KEY","favorites","addToFavorites","removeFavorite","useState","city","setCity","daily","setDaily","suggestions","setSuggestions","dataFetched","setDataFetched","cityAPI","event","value","target","nativeEvent","data","results","selected","find","suggestion","LocalizedName","getFiveDayAPI","Key","getCityAPI","then","res","result","DailyForecasts","useEffect","load","isFavorite","favorite","className","Math","floor","Temperature","Maximum","Value","Minimum","Day","IconPhrase","type","list","placeholder","onChange","id","map","onClick","day","i","Date","toString","split","Favorites","currentWeather","setCurrentWeather","promises","Promise","all","values","to","replace","Metric","App","setFavorites","filter","console","log","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sQAEMA,EAAU,sC,SAEDC,E,gFAAf,WAA+BC,EAAGC,GAAlC,mBAAAC,EAAA,6DACOC,EADP,UACgBL,EADhB,oDACmEG,EADnE,cAC4ED,GAD5E,SAEwBI,MAAMD,GAF9B,cAEOE,EAFP,gBAGoBA,EAASC,OAH7B,cAGOC,EAHP,yBAIQA,GAJR,4C,+BAOeC,E,gFAAf,WAAwBC,EAASC,GAAjC,mBAAAR,EAAA,6DACOC,EADP,UACgBL,EADhB,oCACmDW,EADnD,mBACqEC,EADrE,yBAEwBN,MAAMD,GAF9B,cAEOE,EAFP,gBAGoBA,EAASC,OAH7B,cAGOC,EAHP,yBAIQA,GAJR,4C,sBA+HeI,MAxHf,SAAcC,GAAQ,IAAD,cACZC,EAAuDD,EAAvDC,QAASC,EAA8CF,EAA9CE,UAAWC,EAAmCH,EAAnCG,eAAgBC,EAAmBJ,EAAnBI,eAC5C,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACMC,EAAQ,yEAAD,OAA0Eb,EAA1E,eANO,4CASpB,WAAwBc,GAAxB,mBAAAzB,EAAA,yDACS0B,EAAUD,EAAME,OAAhBD,OACJD,EAAMG,YAAYC,KAFvB,gCAIwBhC,EAAgB6B,EAAOf,GAJ/C,OAIQmB,EAJR,OAKET,EAAeS,GALjB,uBAQQC,EAAWX,EAAYY,MAAK,SAACC,GAAD,OAAgBA,EAAWC,gBAAkBR,KAC/ET,EAAQc,GACRI,EAAcJ,EAASK,KAVzB,6CAToB,+BAuBLC,IAvBK,2EAuBpB,sBAAArC,EAAA,sEACcE,MAAMsB,GACjBc,MAAK,SAACC,GAAD,OAASA,EAAInC,UAClBkC,MAAK,SAACE,GACNvB,EAAQuB,EAAO,OAJlB,oFAvBoB,+BA+BLL,IA/BK,2EA+BpB,wCAAAnC,EAAA,6DAA6BO,EAA7B,+BAAuC,SAAvC,SACcD,EAASC,EAASI,GAAS2B,MAAK,SAACE,GAC7CrB,EAASqB,EAAOC,mBAFlB,oFA/BoB,sBAqCpBC,qBAAU,WAAM,4CACf,sBAAA1C,EAAA,+EAEQqC,IAFR,uBAGQF,IAHR,OAIEZ,GAAe,GAJjB,0GADe,uBAAC,WAAD,wBASfoB,KACE,CAACnB,IAGJ,IAAMoB,EAAahC,EAAUoB,MAAK,SAACa,GAAD,OAAcA,EAAST,OAAT,OAAiBpB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMoB,QAEvE,OACC,gCACC,sBAAKU,UAAU,WAAf,UACC,sBAAKA,UAAU,eAAf,UACC,kDACCxB,EACA,oBAAIwB,UAAU,eAAd,mBAA8BlC,EAAU,UAAxC,aAA8B,EAAcsB,gBAE5C,2CAEAZ,EACA,qBAAIwB,UAAU,iBAAd,UACEC,KAAKC,QACJ,UAAA9B,EAAM,UAAN,mBAAU+B,mBAAV,mBAAuBC,eAAvB,eAAgCC,QAAhC,UACAjC,EAAM,UADN,iBACA,EAAU+B,mBADV,iBACA,EAAuBG,eADvB,aACA,EAAgCD,QAAS,GAH5C,OAMA,2CAEA7B,EACA,oBAAIwB,UAAU,sBAAd,SAAqC5B,EAAM,GAAGmC,IAAIC,aAElD,8CAGF,sBAAKR,UAAU,cAAf,UACC,uBAAOS,KAAK,OAAOC,KAAK,SAASC,YAAa,iBAAkBC,SA9EhD,8CA+EhB,0BAAUC,GAAG,SAAb,SACEvC,EAAYwC,KAAI,SAAC3B,GAAD,OAChB,wBAAQP,MAAOO,EAAWC,qBAG5B,wBACCY,UAAU,MACVe,QAAS,WACR,GAAIjB,EAAY,OAAO9B,EAAeE,GACtCH,EAAeG,IAJjB,SAME4B,EAAa,wBAA0B,2BAK1CtB,EACA,8BACC,6BACEJ,EAAM0C,KAAI,SAACE,EAAKC,GAAO,IAAD,QACtB,OACC,+BACC,4BAAI,IAAIC,KAAKF,EAAIE,MAAMC,WAAWC,MAAM,KAAK,KAC7C,uBACA,8BACEnB,KAAKC,QACD,OAAHc,QAAG,IAAHA,GAAA,UAAAA,EAAKb,mBAAL,mBAAkBC,eAAlB,eAA2BC,QAA3B,OACAW,QADA,IACAA,GADA,UACAA,EAAKb,mBADL,iBACA,EAAkBG,eADlB,aACA,EAA2BD,QAAQ,GAHtC,SAHQY,UAcb,+CChGWI,MAjCf,SAAmBzD,GAClB,IAAQC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,UAEjB,EAA4CG,mBAAS,IAArD,mBAAOqD,EAAP,KAAuBC,EAAvB,KAeA,OAbA3B,qBAAU,WACT,IAAM4B,EAAW1D,EAAUgD,KAAI,SAAC5C,GAC/B,OAAOd,MAAM,4DAAD,OACiDc,EAAKoB,IADtD,mBACoEzB,EADpE,iBAGV2B,MAAK,SAACC,GAAD,OAASA,EAAInC,UAClBkC,MAAK,SAACjC,GAAD,OAAUA,EAAK,SAEvBkE,QAAQC,IAAIF,GAAUhC,MAAK,SAACmC,GAC3BJ,EAAkBI,QAEjB,IAGF,oBAAI3B,UAAU,gBAAd,SACElC,EAAUgD,KAAI,SAAC5C,EAAM+C,GAAO,IAAD,EAC3B,OACC,6BACmB,cAAC,IAAD,CAAMW,GAAG,QAAQC,SAAO,EAAxB,SAAyB,yBAAQ7B,UAAU,mBAAlB,UAC3C,8BAAM9B,EAAKkB,gBACX,wCAAMkC,EAAeL,UAArB,aAAM,EAAmBd,YAAY2B,OAAOzB,qBCiCnC0B,MAtDf,WACC,MAAkC9D,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBkE,EAAlB,KACMnE,EAAU,mCAMhB,SAASG,EAAe+B,GACvBiC,EAAalE,EAAUmE,QAAO,SAAC/D,GAAD,OAAU6B,EAAST,MAAQpB,EAAKoB,QAK/D,OAFA4C,QAAQC,IAAI,YAAarE,GAGxB,qBAAKkC,UAAU,MAAf,SACC,eAAC,IAAD,WACC,yBAAQA,UAAU,aAAlB,UACC,cAAC,IAAD,CAAM4B,GAAG,QAAQC,SAAO,EAAxB,SACC,wBAAQ7B,UAAU,kBAAlB,yBAED,cAAC,IAAD,CAAM4B,GAAG,aAAaC,SAAO,EAA7B,SACC,wBAAQ7B,UAAU,iBAAlB,4BAGF,eAAC,IAAD,WACC,cAAC,IAAD,CACCoC,OAAK,EACLC,KAAK,IACLC,OAAQ,WACP,OAAO,cAAC,IAAD,CAAUV,GAAG,aAGtB,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,QAAlB,SACC,cAAC,EAAD,CACCxE,QAASA,EACTC,UAAWA,EACXE,eAAgBA,EAChBD,eAlCN,SAAwBgC,GACvBiC,EAAa,GAAD,mBAAKlE,GAAL,CAAgBiC,UAoCzB,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,aAAlB,SACC,cAAC,EAAD,CACCxE,QAASA,EACTG,eAAgBA,EAChBF,UAAWA,eCxCHyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a54c739f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst baseUrl = \"https://dataservice.accuweather.com\";\r\n\r\nasync function getAutoComplete(q, key) {\r\n\tconst url = `${baseUrl}/locations/v1/cities/autocomplete?apikey=${key}&q=${q}`;\r\n\tconst response = await fetch(url);\r\n\tconst body = await response.json();\r\n\treturn body;\r\n}\r\n\r\nasync function getDaily(cityKey, apikey) {\r\n\tconst url = `${baseUrl}/forecasts/v1/daily/5day/${cityKey}?apikey=${apikey}&metric=true`;\r\n\tconst response = await fetch(url);\r\n\tconst body = await response.json();\r\n\treturn body;\r\n}\r\n\r\nfunction Main(props) {\r\n\tconst { API_KEY, favorites, addToFavorites, removeFavorite } = props;\r\n\tconst [city, setCity] = useState(null);\r\n\tconst [daily, setDaily] = useState([]);\r\n\tconst [suggestions, setSuggestions] = useState([]);\r\n\tconst [dataFetched, setDataFetched] = useState(false);\r\n\tconst cityAPI=`https://dataservice.accuweather.com/locations/v1/cities/search?apikey=${API_KEY}&q=tel aviv`\r\n\t\r\n\r\n\tasync function onSearch(event) {\r\n\t\tconst { value } = event.target;\r\n\t\tif (event.nativeEvent.data) {\r\n\t\t\t// on type in input\r\n\t\t\tconst results = await getAutoComplete(value, API_KEY);\r\n\t\t\tsetSuggestions(results);\r\n\t\t} else {\r\n\t\t\t// on select from datalist\r\n\t\t\tconst selected = suggestions.find((suggestion) => suggestion.LocalizedName === value);\r\n\t\t\tsetCity(selected);\r\n\t\t\tgetFiveDayAPI(selected.Key);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getCityAPI() {\r\n\t\treturn await fetch(cityAPI)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetCity(result[0]);\r\n\t\t\t});\r\n\t}\r\n\r\n\tasync function getFiveDayAPI(cityKey = \"215854\") {\r\n\t\treturn await getDaily(cityKey, API_KEY).then((result) => {\r\n\t\t\tsetDaily(result.DailyForecasts);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function load() {\r\n\t\t\ttry {\r\n\t\t\t\tawait getCityAPI();\r\n\t\t\t\tawait getFiveDayAPI();\r\n\t\t\t\tsetDataFetched(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t}\r\n\t\t}\r\n\t\tload();\r\n\t}, [cityAPI]);\r\n\r\n\t\r\n\tconst isFavorite = favorites.find((favorite) => favorite.Key === city?.Key);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"Main-top\">\r\n\t\t\t\t<div className=\"Main-Current\">\r\n\t\t\t\t\t<h1>Current weather:</h1>\r\n\t\t\t\t\t{dataFetched ? (\r\n\t\t\t\t\t\t<h1 className=\"current-city\">{favorites[0]?.LocalizedName}</h1>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>loading...</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{dataFetched ? (\r\n\t\t\t\t\t\t<h2 className=\"current-degree\">\r\n\t\t\t\t\t\t\t{Math.floor(\r\n\t\t\t\t\t\t\t\t(daily[0]?.Temperature?.Maximum?.Value +\r\n\t\t\t\t\t\t\t\t\tdaily[0]?.Temperature?.Minimum?.Value) / 2)}C\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>loading...</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{dataFetched ? (\r\n\t\t\t\t\t\t<h1 className=\"current-description\">{daily[0].Day.IconPhrase}</h1>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>loading...</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Main-search\">\r\n\t\t\t\t\t<input type=\"text\" list=\"search\" placeholder={\"search weather\"} onChange={onSearch} />\r\n\t\t\t\t\t<datalist id=\"search\">\r\n\t\t\t\t\t\t{suggestions.map((suggestion) => (\r\n\t\t\t\t\t\t\t<option value={suggestion.LocalizedName} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"add\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (isFavorite) return removeFavorite(city);\r\n\t\t\t\t\t\t\taddToFavorites(city);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{isFavorite ? \"Remove From favorites\" : \"Add to favorites\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{dataFetched ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{daily.map((day, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t\t<p>{new Date(day.Date).toString().split(\" \")[0]}</p>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t{Math.floor(\r\n\t\t\t\t\t\t\t\t\t\t\t(day?.Temperature?.Maximum?.Value +\r\n\t\t\t\t\t\t\t\t\t\t\t\tday?.Temperature?.Minimum?.Value) /2)}C\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>Loading...</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Favorites(props) {\r\n\tconst { API_KEY, favorites } = props;\r\n\r\n\tconst [currentWeather, setCurrentWeather] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst promises = favorites.map((city) => {\r\n\t\t\treturn fetch(\r\n\t\t\t\t`https://dataservice.accuweather.com/currentconditions/v1/${city.Key}?apikey=${API_KEY}&metric=true`\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((body) => body[0]);\r\n\t\t});\r\n\t\tPromise.all(promises).then((values) => {\r\n\t\t\tsetCurrentWeather(values);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ul className=\"Favorite-city\">\r\n\t\t\t{favorites.map((city, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li>\r\n                        <Link to=\"/Main\" replace><button className=\"Favorites-button\">\r\n\t\t\t\t\t\t<div>{city.LocalizedName}</div>\r\n\t\t\t\t\t\t<div>{currentWeather[i]?.Temperature.Metric.Value}</div></button></Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport Favorites from \"./Favorites\";\n\nfunction App() {\n\tconst [favorites, setFavorites] = useState([]);\n\tconst API_KEY = \"xus45HuCuActYKAh9z5nVFz5nolwmJzR\";\n\n\tfunction addToFavorites(favorite) {\n\t\tsetFavorites([...favorites, favorite]);\n\t}\n\n\tfunction removeFavorite(favorite) {\n\t\tsetFavorites(favorites.filter((city) => favorite.Key !== city.Key));\n\t}\n\n\tconsole.log(\"favorites\", favorites);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<Link to=\"/Main\" replace>\n\t\t\t\t\t\t<button className=\"App-main-button\">Main Page</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/Favorites\" replace>\n\t\t\t\t\t\t<button className=\"App-fav-button\">Favorites</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</header>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={() => {\n\t\t\t\t\t\t\treturn <Redirect to=\"/Main\" />;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/Main\">\n\t\t\t\t\t\t<Main\n\t\t\t\t\t\t\tAPI_KEY={API_KEY}\n\t\t\t\t\t\t\tfavorites={favorites}\n\t\t\t\t\t\t\tremoveFavorite={removeFavorite}\n\t\t\t\t\t\t\taddToFavorites={addToFavorites}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/Favorites\">\n\t\t\t\t\t\t<Favorites\n\t\t\t\t\t\t\tAPI_KEY={API_KEY}\n\t\t\t\t\t\t\tremoveFavorite={removeFavorite}\n\t\t\t\t\t\t\tfavorites={favorites}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}